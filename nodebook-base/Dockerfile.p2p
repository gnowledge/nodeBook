# NodeBook P2P Server Dockerfile
# Multi-stage build for optimized production image

# Stage 1: Base image with Node.js 22 LTS
FROM node:22-alpine AS base

# Install system dependencies for libp2p and crypto
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Stage 2: Development dependencies
FROM base AS development

# Install development dependencies
RUN npm ci

# Copy source code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p user_data logs media && \
    chmod -R 755 user_data logs media

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start P2P server
CMD ["node", "server.js"]

# Stage 3: Production build
FROM base AS production

# Copy source code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p user_data logs media && \
    chmod -R 755 user_data logs media

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start P2P server
CMD ["node", "server.js"]
