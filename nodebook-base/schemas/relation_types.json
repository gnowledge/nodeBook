[
  {
    "name": "inflow",
    "description": "An event increases a resource.",
    "domain": ["Event"],
    "range": ["Resource"]
  },
  {
    "name": "outflow",
    "description": "An event decreases a resource.",
    "domain": ["Event"],
    "range": ["Resource"]
  },
  {
    "name": "provides",
    "description": "An agent provides resources to an event.",
    "domain": ["Agent"],
    "range": ["Event"]
  },
  {
    "name": "receives",
    "description": "An agent receives resources from an event.",
    "domain": ["Agent"],
    "range": ["Event"]
  },
  {
    "name": "duality",
    "description": "Connects reciprocal events (e.g., a sale and a payment).",
    "symmetric": true,
    "domain": ["Event"],
    "range": ["Event"]
  },
  {
    "name": "stockflow",
    "description": "Connects an economic event to the resource it affects.",
    "domain": ["Event"],
    "range": ["Resource"]
  },
  {
    "name": "is_a",
    "inverse_name": "has_subtype",
    "description": "Indicates that a node is an instance of a class.",
    "domain": ["individual"],
    "range": ["class"],
    "symmetric": false,
    "transitive": true,
    "aliases": ["is a", "instance of"]
  },
  {
    "name": "part_of",
    "inverse_name": "has_part",
    "symmetric": false,
    "transitive": true,
    "description": "Indicates that one entity is a part of another entity",
    "domain": [],
    "range": []
  },
  {
    "name": "is a type of",
    "description": "Indicates that a class is a subtype of another class.",
    "inverse_name": "is a parent type of",
    "transitive": true,
    "domain": ["class"],
    "range": ["class"]
  },
  {
    "name": "has prior_state",
    "description": "Defines the inputs and conditions for a transition.",
    "domain": ["Transition"],
    "range": []
  },
  {
    "name": "has post_state",
    "description": "Defines the outputs of a transition.",
    "domain": ["Transition"],
    "range": []
  },
  {
    "name": "has operand",
    "description": "Links a LogicalOperator to one of its operands.",
    "domain": ["LogicalOperator"],
    "range": []
  }
]
