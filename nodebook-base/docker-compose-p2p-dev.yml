version: '3.8'

services:
  # P2P NodeBook Server (Main Backend)
  nodebook-p2p:
    build:
      context: .
      dockerfile: Dockerfile.p2p
    container_name: nodebook-p2p
    ports:
      - "3000:3000"
    volumes:
      - ./user_data:/app/user_data
      - ./logs:/app/logs
      - ./media:/app/media
    environment:
      - NODE_ENV=development
      - P2P_ENABLED=true
      - COLLABORATION_ENABLED=true
      - LOG_LEVEL=info
    networks:
      - nodebook-network
    depends_on:
      - nlp-service
      - wordnet-service
    restart: unless-stopped

  # NLP Service for CNL Processing
  nlp-service:
    build:
      context: ../nlp-service
      dockerfile: Dockerfile
    container_name: nodebook-nlp
    ports:
      - "3001:3001"
    volumes:
      - ../nlp-service:/app
      - ../nlp-service/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - LOG_LEVEL=info
    networks:
      - nodebook-network
    restart: unless-stopped

  # WordNet Service for Semantic Analysis
  wordnet-service:
    build:
      context: ../wordnet-service
      dockerfile: Dockerfile
    container_name: nodebook-wordnet
    ports:
      - "3002:3002"
    volumes:
      - ../wordnet-service:/app
      - ../wordnet-service/data:/app/data
    environment:
      - NODE_ENV=development
      - PORT=3002
      - LOG_LEVEL=info
    networks:
      - nodebook-network
    restart: unless-stopped

  # Frontend (if available)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: nodebook-frontend
    ports:
      - "8080:80"
    volumes:
      - ../frontend:/app
      - ../frontend/node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_P2P_ENABLED=true
    networks:
      - nodebook-network
    depends_on:
      - nodebook-p2p
    restart: unless-stopped

  # Redis for Session Management (Optional)
  redis:
    image: redis:7-alpine
    container_name: nodebook-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nodebook-network
    restart: unless-stopped

  # PostgreSQL for Advanced Data Storage (Optional)
  postgres:
    image: postgres:15-alpine
    container_name: nodebook-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nodebook
      - POSTGRES_USER=nodebook
      - POSTGRES_PASSWORD=nodebook123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nodebook-network
    restart: unless-stopped

  # P2P Network Monitor (Optional)
  p2p-monitor:
    build:
      context: .
      dockerfile: Dockerfile.p2p-monitor
    container_name: nodebook-p2p-monitor
    ports:
      - "3003:3003"
    volumes:
      - ./user_data:/app/user_data
    environment:
      - NODE_ENV=development
      - MONITOR_PORT=3003
      - P2P_NETWORK_ID=nodebook-dev
    networks:
      - nodebook-network
    depends_on:
      - nodebook-p2p
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  nodebook-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
